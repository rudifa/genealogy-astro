---
import type {Language, Translations} from "../i18n/index";

interface Props {
  language: Language;
  translations: Translations;
}

const {translations} = Astro.props;
---

<div id='notification' class='notification' style='display: none;'></div>

<style>
  .notification {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 12px 20px;
    border-radius: 6px;
    font-weight: 500;
    z-index: 1000;
    max-width: 300px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    transition: all 0.3s ease;
  }

  .notification.success {
    background-color: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
  }

  .notification.error {
    background-color: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
  }

  .notification.info {
    background-color: #d1ecf1;
    color: #0c5460;
    border: 1px solid #bee5eb;
  }
</style>

<script is:inline type='module' define:vars={{translations}}>
  // This module has no need for the AppLanguages and AppData imports
  // as it does not handle translations or app data directly.

  // --- 1. Variable declarations ---
  const notificationElement = document.getElementById("notification");

  // --- 2. Main execution flow ---
  if (!notificationElement) {
    console.error("Notification: Notification element not found");
  } else {
    console.log("Notification: Element found, setting up functionality");

    // Make notification functions available globally
    window.showNotification = showNotification;
    window.hideNotification = hideNotification;

    console.log("Notification: System initialized successfully");
  }

  // --- 3. Function definitions ---
  function showNotification(message, type = "info", duration = 3000) {
    console.log(`Notification: Showing ${type} notification:`, message);

    notificationElement.textContent = message;
    notificationElement.className = `notification ${type}`;
    notificationElement.style.display = "block";

    // Auto-hide after duration
    setTimeout(() => {
      notificationElement.style.display = "none";
    }, duration);
  }

  function hideNotification() {
    notificationElement.style.display = "none";
  }
</script>
