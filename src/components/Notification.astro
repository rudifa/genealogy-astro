---
// This component is now self-sufficient and does not require any props.
// It connects directly to the App singleton for its data.
---

<div id='notification' class='notification' style='display: none;'></div>

<style>
  .notification {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 12px 20px;
    border-radius: 6px;
    font-weight: 500;
    z-index: 1000;
    max-width: 300px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    transition: all 0.3s ease;
  }

  .notification.success {
    background-color: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
  }

  .notification.error {
    background-color: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
  }

  .notification.info {
    background-color: #d1ecf1;
    color: #0c5460;
    border: 1px solid #bee5eb;
  }
</style>

<script is:inline type='module'>
  import {App} from "/utility/App.js";

  // --- 1. Variable declarations ---
  const app = App.ensureAppExists();
  const notificationElement = document.getElementById("notification");

  // --- 2. Main execution flow ---
  if (!notificationElement) {
    console.error("Notification: Notification element not found");
  } else {
    // Subscribe to UI state changes to show/hide notifications
    app.uiState.subscribe((newState) => {
      const {notification} = newState;
      if (notification) {
        notificationElement.textContent = notification.message;
        notificationElement.className = `notification ${notification.type}`;
        notificationElement.style.display = "block";
      } else {
        notificationElement.style.display = "none";
      }
    }, "Notification-UIState");
  }
</script>
