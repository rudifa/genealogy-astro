---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import GenealogyGraph from "../components/GenealogyGraph.astro";
import Footer from "../components/Footer.astro";

import {getTranslations, type Language} from "../i18n/index.ts";

// For now, we'll default to English on the server side
// The client will handle language detection and updates
const currentLanguage: Language = "en";
const t = getTranslations(currentLanguage);
---

<Layout
  title={t.pageTitle}
  description={t.pageDescription}
  language={currentLanguage}>
  <main class='app-container'>
    <Header language={currentLanguage} translations={t} />
    <GenealogyGraph language={currentLanguage} translations={t} />
    <Footer language={currentLanguage} translations={t} />
  </main>
</Layout>

<script is:inline type='module'>
  console.log("‚û°Ô∏è index: <script is:inline type='module'>");

  import {AppLanguages} from "/utility/AppLanguages.js";
  // Use the AppLanguages singleton for all translations management
  const appLanguages = AppLanguages.ensureOneExists();
  appLanguages.subscribe((newTranslations) => {
    console.log("üëç index: current language:", newTranslations.isoCode);
  });
</script>

<style>
  .app-container {
    display: flex;
    flex-direction: column;
    height: 100vh;
    font-family:
      -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
  }

  /* Global styles */
  :global(body) {
    margin: 0;
    padding: 0;
    overflow-x: hidden;
  }

  :global(*) {
    box-sizing: border-box;
  }
</style>
